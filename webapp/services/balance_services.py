import hashlib
import time
from typing import Tuple

from django.core.exceptions import ObjectDoesNotExist
from django.core.files.uploadedfile import UploadedFile
from django.db import transaction

from tag_bot.settings import MY_LOGGER
from webapp.models import PaymentBills, Profiles, Transaction, BotUser, BotSettings
from webapp.utils import handle_uploaded_file, send_message_from_bot


class BalanceServices:
    """
    –°–µ—Ä–≤–∏—Å—ã –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏, —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å –±–∞–ª–∞–Ω—Å–æ–º –∏ –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º.
    """
    @staticmethod
    def make_context_for_balance_page(tlg_id):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–∞–ª–∞–Ω—Å–∞.
        """
        MY_LOGGER.debug(f'–í—ã–∑–≤–∞–Ω —Å–µ—Ä–≤–∏—Å BalanceServices.make_context_for_balance_page | tlg_id=={tlg_id}')
        try:
            profile_obj = Profiles.objects.get(bot_user__tlg_id=tlg_id)
        except ObjectDoesNotExist:
            MY_LOGGER.warning(f'–ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å —é–∑–µ—Ä–∞ —Å tlg_id == {tlg_id}')
            return 404, f'User with TG ID == {tlg_id} not found'

        context = {
            'pay_methods': PaymentBills.pay_methods_tpl,
            'balance': profile_obj.balance,
            'transaction': Transaction.objects.filter(bot_user__tlg_id=tlg_id)
        }
        return 200, context

    @staticmethod
    def create_new_bill(tlg_id, amount, pay_method):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—á—ë—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ 2 —à–∞–≥–æ–º –æ–ø–ª–∞—Ç—ã.
        """
        try:
            bot_user = BotUser.objects.get(tlg_id=tlg_id)
        except ObjectDoesNotExist:
            MY_LOGGER.warning(f'BotUser —Å tlg_id == {tlg_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î.')
            return 404, f'BotUser —Å TG ID == {tlg_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!'

        bill_obj = PaymentBills.objects.create(
            bot_user=bot_user,
            amount=amount,
            pay_method=pay_method,
            bill_hash=hashlib.md5(string=f'{bot_user}{amount}{pay_method}{time.time()}'.encode('utf-8')).hexdigest()
        )
        context = {
            'to_card_pay_data': BotSettings.objects.get(key='to_card_pay_data').value,
            'bill_hash': bill_obj.bill_hash,
            'pay_method': bill_obj.pay_method,
            'amount': bill_obj.amount,
        }
        return 200, context

    @staticmethod
    def get_bill(bill_hash):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑ –ë–î –∏–Ω—Ñ—ã –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Å—á–µ—Ç–µ –Ω–∞ –æ–ø–ª–∞—Ç—É.
        """
        MY_LOGGER.debug(f'–ó–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–∏—Å BalanceServices.get_bill c —Ö—ç—à–µ–º {bill_hash!r}')
        try:
            bill_obj = PaymentBills.objects.get(bill_hash=bill_hash)
        except ObjectDoesNotExist:
            MY_LOGGER.warning(f'–û–±—ä–µ–∫—Ç —Å—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Å —Ö—ç—à–µ–º {bill_hash!r} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î!')
            return 404, '–°—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'

        context = {
            'to_card_pay_data': BotSettings.objects.get(key='to_card_pay_data').value,
            'bill_hash': bill_obj.bill_hash,
            'pay_method': bill_obj.pay_method,
            'amount': bill_obj.amount,
            'created_at': bill_obj.created_at,
            'status': bill_obj.status,
            'bot_user': bill_obj.bot_user,
        }
        return 200, context

    @staticmethod
    def update_bill_and_send_for_confirmation(bill_file: UploadedFile, bill_hash: str):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–≥–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
        """
        MY_LOGGER.debug(f'–ó–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–∏—Å BalanceServices.update_bill_and_send_for_confirmation')

        try:
            bill_obj = PaymentBills.objects.get(bill_hash=bill_hash)
        except ObjectDoesNotExist:
            MY_LOGGER.warning(f'–û–±—ä–µ–∫—Ç —Å—á–µ—Ç–∞ —Å —Ö—ç—à–µ–º {bill_hash!r} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î!')
            return 404, '–°—á–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω.'

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –Ω–∞ –¥–∏—Å–∫ —Ö–æ—Å—Ç–∞
        file_path = handle_uploaded_file(file=bill_file, bill_pk=bill_obj.pk)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏ –ø–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –ø–ª–∞—Ç–µ–∂–∞ (—Å–º tgbot.handlers.payment_handlers)
        send_cmnd_rslt = send_message_from_bot(
            text=f'<tg-spoiler>$$$confirm_payment {bill_hash}</tg-spoiler>',
            file_path=file_path,
            disable_notification=False,
        )
        if not send_cmnd_rslt:
            return 400, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–ª–∞—Ç—ë–∂ –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.'

        bill_obj.file = file_path
        bill_obj.status = 'on_check'
        bill_obj.save()

        context = {
            "header": f"‚òëÔ∏è –û–ø–ª–∞—Ç–∞ –ø–æ —Å—á–µ—Ç—É ‚Ññ {bill_obj.pk} –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è",
            "description": f"üí∏ –û–ø–ª–∞—Ç–∞ –ø–æ —Å—á–µ—Ç—É ‚Ññ {bill_obj.pk} –≤ —Ä–∞–∑–º–µ—Ä–µ {bill_obj.amount} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ "
                           f"–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ, –ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–µ–º–Ω–æ–≥–æ"
                           f" –ø–æ–¥–æ–∂–¥–∞—Ç—å ‚åõÔ∏è. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É –∂–µ, –∫–∞–∫ –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –í–∞—à –ø–ª–∞—Ç—ë–∂ üí¨.",
            "btn_text": "üëå –°–ø–∞—Å–∏–±–æ, –∂–¥—É",
        }
        return 200, context

    @staticmethod
    def confirm_or_decline_payment(bill_hash, bill_comment, tg_msg_id, accept_pay_flag):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞.
        """
        MY_LOGGER.debug(f'–í—ã–∑–≤–∞–Ω —Å–µ—Ä–≤–∏—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞.')

        # –î–æ—Å—Ç–∞—ë–º –∏–∑ –ë–î –æ–±—ä–µ–∫—Ç —Å—á–µ—Ç–∞
        try:
            bill_obj = PaymentBills.objects.get(bill_hash=bill_hash)
        except ObjectDoesNotExist:
            MY_LOGGER.warning(f'–û–±—ä–µ–∫—Ç —Å—á–µ—Ç–∞ —Å —Ö—ç—à–µ–º {bill_hash!r} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î!')
            return 404, '–°—á–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω.'

        if accept_pay_flag == 1:
            # –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—á–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏ –ø–æ–ø–æ–ª–Ω—è–µ–º –±–∞–ª–∞–Ω—Å
            with transaction.atomic():
                bill_obj.status = 'payed'
                bill_obj.save()
                profile_obj = Profiles.objects.get(bot_user=bill_obj.bot_user)
                profile_obj.balance = float(profile_obj.balance) + float(bill_obj.amount)
                profile_obj.save()
                Transaction.objects.create(
                    bot_user=bill_obj.bot_user,
                    amount=bill_obj.amount,
                    operation_type="depositing",
                    description=f'–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {bill_comment!r}',
                )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            send_message_from_bot(
                text=f'üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {bill_obj.amount} —Ä—É–±.</b>\n\n'
                     f'üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <i>{bill_comment!r}</i>',
                target_chat=bill_obj.bot_user.tlg_id,
                disable_notification=False,
            )

            # –ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —É –∞–¥–º–∏–Ω–∞
            send_message_from_bot(
                text=f'$$$del_msg {tg_msg_id} confirm_pay {bill_obj.pk}',
                disable_notification=True,
            )

        # –ï—Å–ª–∏ –ø–ª–∞—Ç—ë–∂ –æ—Ç–∫–ª–æ–Ω—ë–Ω
        else:
            bill_obj.status = 'decline'
            bill_obj.save()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            send_message_from_bot(
                text=f'üôÖ‚Äç‚ôÇÔ∏è <b>–í–∞—à –ø–ª–∞—Ç—ë–∂ –ø–æ —Å—á–µ—Ç—É ‚Ññ {bill_obj.pk} –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω!</b>\n\n'
                     f'üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <i>{bill_comment!r}</i>',
                target_chat=bill_obj.bot_user.tlg_id,
                disable_notification=False,
            )

            # –ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —É –∞–¥–º–∏–Ω–∞
            send_message_from_bot(
                text=f'$$$del_msg {tg_msg_id} decline_pay {bill_obj.pk}',
                disable_notification=True,
            )
        return 200, {
            'header': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
            'description': f'–°—á–µ—Ç—É ‚Ññ {bill_obj.pk} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å {bill_obj.status}. '
                           f'–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å TG ID {bill_obj.bot_user.tlg_id}',
            'btn_text': '–û–∫. –ü–æ–Ω—è–ª.'
        }

    @staticmethod
    def check_user_balance(tlg_id: str, groups_numb=1) -> bool:
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –µ–º—É –æ—Ñ–æ—Ä–º–∏—Ç—å –≥—Ä—É–ø–ø—É –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å—É—Ç–∫–∏
        """
        MY_LOGGER.debug(f'–ó–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–∏—Å BalanceServices.check_user_balance —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: '
                        f'tlg_id == {tlg_id}, groups_numb == {groups_numb}')

        user_balance = float(Profiles.objects.get(bot_user__tlg_id=tlg_id).balance)
        tariff = float(BotSettings.objects.get(key='tariff').value)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –≥—Ä—É–ø–ø—ã
        if user_balance >= tariff * groups_numb:
            return True
        return False

    @staticmethod
    def writing_off_money(tlg_id: str, groups_numb: int = 1):
        """
        –ú–µ—Ç–æ–¥ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤.
        """
        MY_LOGGER.debug(f'–ó–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–∏—Å BalanceServices.writing_off_money —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: '
                        f'tlg_id == {tlg_id}, groups_numb == {groups_numb}')

        user_profile = Profiles.objects.get(bot_user__tlg_id=tlg_id)
        tariff = float(BotSettings.objects.get(key='tariff').value)
        pay_amount = tariff * groups_numb

        with transaction.atomic():

            # –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
            user_profile.balance = float(user_profile.balance) - pay_amount
            user_profile.save()

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            Transaction.objects.create(
                bot_user=user_profile.bot_user,
                amount=pay_amount,
                operation_type='writing_off',
                description=f'–°—É—Ç–æ—á–Ω–∞—è –ø–ª–∞—Ç–∞ –∑–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø –≤ –∫–æ–ª-–≤–µ {groups_numb!r}',
            )


