import os

from pyrogram.types import InputMediaDocument, InputMediaPhoto, InputMediaVideo, InputMediaAudio, InputMediaAnimation

from tag_bot.settings import BASE_HOST
from tgbot.keyboards.bot_keyboards import form_webapp_kbrd
from django.urls import reverse
from pyrogram import Client


async def send_msg_for_confirm_pay(msg_text, who_approve_pay):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
    """
    buttons_data = (
        ('üîé –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂', f"{BASE_HOST}{reverse(viewname='webapp:check_payment')}")
    )
    await Client.send_message(
        text=msg_text,
        chat_id=who_approve_pay,
        reply_markup=await form_webapp_kbrd(buttons_data=buttons_data)
    )


async def check_media_format_and_send_msg(file_path, chat_id, msg_text, client):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω—É–∂–Ω—ã–º –≤–ª–æ–∂–µ–Ω–∏–µ–º.
    """
    file_ext = os.path.splitext(file_path)[1]

    if file_ext.upper() in ('.MOV', '.AVI', '.MP4', '.MKV'):    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
        await client.send_video(
            chat_id=chat_id,
            video=file_path,
            caption=msg_text,
        )
    elif file_ext.upper() in ('.JPEG', '.JPG', '.PNG', '.BMP', '.SVG'):     # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        await client.send_photo(
            chat_id=chat_id,
            photo=file_path,
            caption=msg_text,
        )
    elif file_ext.upper() in ('.GIF',):     # –û—Ç–ø—Ä–∞–≤–∫–∏ –≥–∏—Ñ–∫–∏
        await client.send_animation(
            chat_id=chat_id,
            animation=file_path,
            caption=msg_text,
        )
    elif file_ext.upper() in ('.MP3', '.WAV', '.MP4', '.WMA'):  # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ
        await client.send_audio(
            chat_id=chat_id,
            audio=file_path,
            caption=msg_text,
        )
    else:   # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞, –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        await client.send_document(
            chat_id=chat_id,
            document=file_path,
            caption=msg_text,
        )


async def make_media_type(file_path):
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ç–∏–ø –º–µ–¥–∏–∞-—Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω—É–∂–Ω—ã InputMedia —Ç–∏–ø pyrogram
    """
    file_ext = os.path.splitext(file_path)[1]
    if file_ext.upper() in ('.MOV', '.AVI', '.MP4', '.MKV'):    # –í–∏–¥–µ–æ
        return InputMediaVideo(media=file_path)
    elif file_ext.upper() in ('.GIF',):     # –ì–∏—Ñ–∫–∞
        return InputMediaAnimation(media=file_path)
    elif file_ext.upper() in ('.JPEG', '.JPG', '.PNG', '.BMP', '.SVG'):     # –ö–∞—Ä—Ç–∏–Ω–∫–∞
        return InputMediaPhoto(media=file_path)
    elif file_ext.upper() in ('.MP3', '.WAV', '.MP4', '.WMA'):  # –ê—É–¥–∏–æ
        return InputMediaAudio(media=file_path)
    else:   # –î–æ–∫—É–º–µ–Ω—Ç
        return InputMediaDocument(media=file_path)


async def send_tag_msg(group_chat: dict, client: Client, msg_text: str):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–≥–æ–º.
    """
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–¥–Ω–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
    if len(group_chat.get('group_files')) == 1:

        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Ñ–æ—Ä–º–∞—Ç, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –º–µ–¥–∏–∞
        file_path = group_chat.get('group_files')[0].path
        await check_media_format_and_send_msg(
            file_path=file_path,
            msg_text=msg_text,
            chat_id=group_chat.get('group_tg_id'),
            client=client,
        )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π
    elif len(group_chat.get('group_files')) > 1:
        media_lst = []
        for indx, i_file in enumerate(group_chat.get('group_files')):
            input_media_obj = await make_media_type(file_path=i_file.path)  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞
            if indx == len(group_chat.get('group_files')) - 1:
                input_media_obj.caption = msg_text
                media_lst.append(input_media_obj)
            else:
                media_lst.append(input_media_obj)
        await client.send_media_group(
            chat_id=group_chat.get('group_tg_id'),
            media=media_lst,
        )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –º–µ–¥–∏–∞
    else:
        await client.send_message(
            chat_id=group_chat.get('group_tg_id'),
            text=msg_text,
        )
